
import java.awt.event.*;
import java.util.*;
import javax.swing.*;

public class EditTimeline extends javax.swing.JFrame {

    /**
     * Creates new form EditTimeline
     */
    private Timeline timeline;
    private FileIO fileIO;
    private Event selectedEvent;
    private JButton editButton;
    private JButton createButton;
    private JButton deleteButton;
    private JComboBox jComboBox1;
    private JLabel jLabel1;
    private JTextField nameTextField;
    
    public EditTimeline(Timeline timeline, FileIO fileIO) {
        this.timeline = timeline;
        this.fileIO = fileIO;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        createButton = new javax.swing.JButton();
        nameTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        setComboBox();
        jComboBox1.addActionListener(new ComboBoxListener());
        
        jLabel1.setText("Edit Timeline");
        editButton.setText("Edit Event");
        deleteButton.setText("Delete Event");
        createButton.setText("Create Event");
        nameTextField.setText("<Name>");
        
        editButton.addActionListener(new ETListener());
        deleteButton.addActionListener(new ETListener());
        createButton.addActionListener(new ETListener());
        
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deleteButton)
                            .addComponent(createButton))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createButton)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
private void setComboBox(){
    ArrayList<Event> events =  timeline.getEvents();
    String[] names = new String[events.size()+1];
    names[0] = "All Events";
    int i = 1;
    for(Event e : events){
            names[i++] = e.getTitle();
    }
    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(names));
}

private class ETListener implements ActionListener{
    
    public ETListener(){
    }
    
    public void actionPerformed(ActionEvent ae){
        JButton thisButton = (JButton) ae.getSource();
        if(thisButton == editButton){
            if(selectedEvent.getTitle() == null) return;
            java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditEvent(selectedEvent, fileIO).setVisible(true);
            }
            });
            
       }else if(thisButton == deleteButton){
           if(selectedEvent.getTitle() != null){
               timeline.deleteEvent(selectedEvent);
               setComboBox();
           }
       }else if(thisButton == createButton){
           
            java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Event event = new Event(nameTextField.getText()); 
                new EditEvent(event, fileIO).setVisible(true);
                timeline.addEvent(event);
                selectedEvent = event;
                setComboBox();                 
            }
            });
       }
    }
    
    }

private class ComboBoxListener implements ActionListener{
    
    public ComboBoxListener(){
        
    }
    
    public void actionPerformed(ActionEvent ae){
        JComboBox thisBox = (JComboBox) ae.getSource();
        
        thisBox.getSelectedItem( ).equals( "female" );
        
        for(Event e : timeline.getEvents()){
            if(thisBox.getSelectedItem().equals(e.getTitle())){
                selectedEvent = e;
                break;
            }
        }

    }
}

}