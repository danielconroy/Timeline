
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.*;
import javax.swing.*;
import javax.swing.JComboBox;

public class ManageCategories extends javax.swing.JFrame {

    /**
     * Creates new form ManageCategories
     */
    private final FileIO fileIO;
    private Category selectedCategory;

    public ManageCategories(FileIO fileIO) {
        this.fileIO = fileIO;        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private JButton editButton;
    private JButton createButton;
    private JButton deleteButton;
    private JComboBox jComboBox1;
    private JLabel jLabel1;
    private JTextField nameTextField;
    
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        createButton = new javax.swing.JButton();
        nameTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Manage Categories");

        setComboBox();
        
        editButton.setText("Edit Category");
        deleteButton.setText("Delete Category");
        createButton.setText("Create Category");
        nameTextField.setText("<Name>");
        
        editButton.addActionListener(new MCListener());
        deleteButton.addActionListener(new MCListener());
        createButton.addActionListener(new MCListener());
        
        jComboBox1.addActionListener(new ComboBoxListener());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(deleteButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(8, 8, 8)
                            .addComponent(editButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(84, 84, 84)
                                    .addComponent(jLabel1))
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(createButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(0, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createButton)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void setComboBox(){
        Iterator<Category> categoryIterator =  fileIO.getCategoryIterator();
        String[] names = new String[fileIO.catSize()];
        int i = 0;
        Category c = new Category("Base");
        while(categoryIterator.hasNext()){
            c = categoryIterator.next();
            names[i++] = c.getName();
        }
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(names));
        selectedCategory = c;
    }
        
    private class MCListener implements ActionListener{

        public MCListener(){
        }

        public void actionPerformed(ActionEvent ae){
            JButton thisButton = (JButton) ae.getSource();
            if(thisButton == editButton){
                if(fileIO.catSize()==1) return;
                java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new EditCategory(selectedCategory).setVisible(true);
                }
            });

           }else if(thisButton == deleteButton){
               if(fileIO.catSize()>1){
                   fileIO.deleteCategory(selectedCategory);
                   setComboBox();
               }

           }else if(thisButton == createButton){
               String name = nameTextField.getText();
               if(name.equals("<Name>")) return;
               Category cat = new Category(name);
               fileIO.addCategory(cat);
               setComboBox(); // Reset combo box to display the new timeline.
           }
        }

        }

    private class ComboBoxListener implements ActionListener{

        public ComboBoxListener(){

        }

        public void actionPerformed(ActionEvent ae){
            JComboBox thisBox = (JComboBox) ae.getSource();
            Iterator<Category> categoryIterator =  fileIO.getCategoryIterator();
            Category c;
            while(categoryIterator.hasNext()){
                c = categoryIterator.next();
                if(thisBox.getSelectedItem().equals(c.getName())){
                   selectedCategory = c;
                   break;
               }            
            }
        }

    }    
    
    
}